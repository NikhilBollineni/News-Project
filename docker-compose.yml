version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: news_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: news_app_autos_v1
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./server/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - news_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache and Message Broker
  redis:
    image: redis:7.2-alpine
    container_name: news_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - news_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend
  api:
    build: .
    container_name: news_api
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/news_app_autos_v1?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - news_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./logs:/app/logs

  # Celery Worker
  worker:
    build: .
    container_name: news_worker
    restart: unless-stopped
    command: celery -A workers.celery_app worker --loglevel=info --concurrency=4
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/news_app_autos_v1?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LOG_LEVEL=INFO
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - news_network
    volumes:
      - ./logs:/app/logs

  # Celery Beat Scheduler
  beat:
    build: .
    container_name: news_beat
    restart: unless-stopped
    command: celery -A workers.celery_app beat --loglevel=info
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/news_app_autos_v1?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LOG_LEVEL=INFO
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - news_network
    volumes:
      - ./logs:/app/logs

  # Celery Flower (Monitoring)
  flower:
    build: .
    container_name: news_flower
    restart: unless-stopped
    command: celery -A workers.celery_app flower --port=5555
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/news_app_autos_v1?authSource=admin
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      - redis
    networks:
      - news_network

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: news_frontend
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - news_network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  news_network:
    driver: bridge
